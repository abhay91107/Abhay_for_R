#Assinment 3: Hospital Data
#Name: Abhay Kumar Jha
#Email:abhay_91107@yahoo.com.au
#user ID: 14791813
#Course ID: rprog-035

#Checking the working directory for this assignment 1 in R
getwd()
#Setting up working directory for this assignment 1
setwd("/Desktop/R/John Hopkins uni work/R Study/Assignment 3 and SWIRL/Hospital Data")
#Re-checking the working directory for this assignment 1 in R to make sure that the code below reads from the correct path
getwd()

#Part 2: Creating a function, 'best' to find out the best hospital in a state
best=function(state,outcome){
  ## Read 'outcome-of-care-measures.csv' file to data
  data = read.csv("outcome-of-care-measures.csv")
  
  ## Check that state and outcome ara valid
  states = levels(data[, 7])[data[, 7]]
  state_flag = FALSE
  for (i in 1:length(states)) {
    if (state == states[i]) {
      state_flag = TRUE
    }
  }
  if (!state_flag) {
    stop ("invalid state")
  } 
  if (!((outcome == "heart attack") | (outcome == "heart failure")
        | (outcome == "pneumonia"))) {
    stop ("invalid outcome")
  }
  
  ## Return hospital name in that state with lowest 30-day death rate
  col = if (outcome == "heart attack") {
    11
  } else if (outcome == "heart failure") {
    17
  } else {
    23
  }
  #Setting the variables to the corresponding fields in the dataset
  data[, col] = suppressWarnings(as.numeric(levels(data[, col])[data[, col]]))
  data[, 2] = as.character(data[, 2])
  statedata = data[grep(state, data$State), ]
  orderdata = statedata[order(statedata[, col], statedata[, 2], na.last = NA), ]
  orderdata[1, 2]
}

# Reading from Source file "Best.R"
# source("best.R")

#Retruning the output for hospitals in texas related to heart attacks
best("TX", "heart attack")

#Retruning the output for hospitals in texas related to heart failures
best("TX", "heart failure")

#Retruning the output for hospitals in Maryland related to heart attacks
best("MD", "heart attack")

#Retruning the output for hospitals in Maryland related to pneumonia
best("MD", "pneumonia")

#Retruning the output for hospitals in BB related to Heartattack
#best("BB", "heart attack")

#Retruning the output for hospitals in New York related to Heartattack
best("NY", "heart attack")


#Part 3: Ranking hospitals by outcome in a state

# creating a ranking function called rankhospital

rankhospital=function(state,outcome,num="best"){
  ## Read outcome data
  data = read.csv("outcome-of-care-measures.csv")
  
  ## Check that state and outcome are valid
  states = levels(data[, 7])[data[, 7]]
  state_flag = FALSE
  for (i in 1:length(states)) {
    if (state == states[i]) {
      state_flag = TRUE
    }
  }
  if (!state_flag) {
    stop ("invalid state")
  } 
  if (!((outcome == "heart attack") | (outcome == "heart failure")
        | (outcome == "pneumonia"))) {
    stop ("invalid outcome")
  }
  
  ## Return hospital name in that state with the given rank 30 day death rate
  col = if (outcome == "heart attack") {
    11
  } else if (outcome == "heart failure") {
    17
  } else {
    23
  }
  #Setting the variables to the corresponding fields in the dataset
  data[, col] = suppressWarnings(as.numeric(levels(data[, col])[data[, col]]))
  data[, 2] = as.character(data[, 2])
  statedata = data[grep(state, data$State), ]
  orderdata = statedata[order(statedata[, col], statedata[, 2], na.last = NA), ]
  if(num == "best") {
    orderdata[1, 2]
  } else if(num == "worst") {
    orderdata[nrow(orderdata), 2]
  } else{
    orderdata[num, 2]
  }
}

# Reading from Source file "rankhospital.R"
# source("rankhospital.R")

# Output to rank the top 5 hospitals in Maryland that specialise in Heart Failure
rankhospital("MD","heart failure",5)

#Reading the titles of all the variables in the dataset related to texas.
# head(texas)

# Output to rank the top 4 hospitals in Texas that specialise in Heart Failure
rankhospital("TX","heart failure",4)

# Output to rank the worst heart attack hospitals in Texas
rankhospital("MD","heart attack","worst")

# Output to rank 5000 hospitals in Minesotta that deal with Heart Attack cases
rankhospital("MN","heart attack",5000)


#Part 4: Ranking hospitals in all states
#Creating the rankall function that ranks hospitals in all states
rankall=function(outcome,num="best"){
  ## Read outcome data
  data = read.csv("outcome-of-care-measures.csv")
  
  ## Check that outcome is valid
  if (!((outcome == "heart attack") | (outcome == "heart failure")
        | (outcome == "pneumonia"))) {
    stop ("invalid outcome")
  }
  
  ## For each state, find the hospital of the given rank
  col <- if (outcome == "heart attack") {
    11
  } else if (outcome == "heart failure") {
    17
  } else {
    23
  }
  
  #Setting the variables to the corresponding fields in the dataset
  data[, col] = suppressWarnings(as.numeric(levels(data[, col])[data[, col]]))
  data[, 2] = as.character(data[, 2])
  
  # Generate an empty vector that will be filled later, row by row, to generate a final output.
  output = vector()
  
  states = levels(data[, 7])
  
  for(i in 1:length(states)) {
    statedata = data[grep(states[i], data$State), ]
    orderdata = statedata[order(statedata[, col], statedata[, 2], 
                                na.last = NA), ]
    hospital = if(num == "best") {
      orderdata[1, 2]
    } else if(num == "worst") {
      orderdata[nrow(orderdata), 2]
    } else{
      orderdata[num, 2]
    }
    output = append(output, c(hospital, states[i]))
  }
  
  ## Return a data frame with the hospital names and the abbreviated state name
  output = as.data.frame(matrix(output, length(states), 2, byrow = TRUE))
  colnames(output) = c("hospital", "state")
  rownames(output) = states
  ## Returning the output for the function rankall
  output
  
}

# Reading from Source file "rankall.R"
# source("rankall.R")

# Output to show the top 10 of the 20 heart attack hospitals
head(rankall("heart attack", 20), 10)

# Output to show the bottom 3 of the worst hospitals that deal with pneumonia
tail(rankall("pneumonia", "worst"), 3)

# Output to show the bottom 10 of the worst hospitals that deal with heart failure
tail(rankall("heart failure"), 10)

# Submitting the code for assessment

source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")

submit()
